apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.currencyconverter"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    // to use the inline delegates
    kotlinOptions {
        jvmTarget = "1.8"
    }
    //databinding library
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    // for mockito stubs
    lintOptions {
        abortOnError false
    }

}

dependencies {
    def room_version = "2.2.5"
    def dagger_version = "2.26"
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'androidx.fragment:fragment-ktx:1.2.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    /**
     * Retrofit 2
     */
    implementation 'com.squareup.retrofit2:retrofit:2.7.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.2'

    /**
     * VM extensions
     */
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.2.0'

    /**
     * Dagger 2
     */
    api "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    api "com.google.dagger:dagger-android:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    api "com.google.dagger:dagger-android-support:$dagger_version"

    /**
     * kotlin coroutines
     */
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.70'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.1'

    /**
     * HttpLoggingInterceptor
     */
    implementation 'com.squareup.okhttp3:logging-interceptor:4.4.1'

    /**
     * Timber
     */
    implementation 'com.jakewharton.timber:timber:4.7.1'

    /**
     * Material design
     */
    implementation 'com.google.android.material:material:1.1.0'

    /**
     * Room
     */
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    /**
     * tests
     */
    testImplementation 'org.mockito:mockito-core:3.3.0'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
}